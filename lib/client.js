// Generated by CoffeeScript 2.5.1
// # Client: server information and object factory

// ## Dependencies
var Client, Connection, EventEmitter, Row, Scanner, Table, util;

util = require('util');

EventEmitter = require('events');

Connection = require("./connection");

Table = require("./table");

Row = require("./row");

Scanner = require("./scanner");

// ## Constructor
Client = function(options) {
  var ref;
  if (!options) {
    options = {};
  }
  EventEmitter.call(this, this.options);
  if (options.protocol == null) {
    options.protocol = 'http';
  }
  if (options.host == null) {
    options.host = '127.0.0.1';
  }
  if (options.port == null) {
    options.port = '8080';
  }
  if (options.krb5 == null) {
    options.krb5 = {};
  }
  if (options.encoding == null) {
    options.encoding = 'utf8';
  }
  if ((ref = options.protocol) !== 'http' && ref !== 'https') {
    throw Error(`Invalid protocol ${JSON.stringify(options.protocol)}`);
  }
  this.options = options;
  this.connection = new Connection(this);
  return this;
};

util.inherits(Client, EventEmitter);

// ## `client.version`

// Query Software Version.
Client.prototype.version = function(callback) {
  return this.connection.get("/version", callback);
};

// ## `client.version_cluster`

// Query Storage Cluster Version.
Client.prototype.version_cluster = function(callback) {
  return this.connection.get("/version/cluster", callback);
};

// ## `client.status_cluster`

// Query Storage Cluster Status.
Client.prototype.status_cluster = function(callback) {
  return this.connection.get("/status/cluster", callback);
};

// ## `client.tables`

// List tables.
Client.prototype.tables = function(callback) {
  return this.connection.get("/", function(err, data) {
    return callback(err, (data && data.table ? data.table : null));
  });
};


//获取命名空间列表
Client.prototype.spaces = function(callback) {
  return this.connection.get("/namespaces", callback);
};
//创建命名空间
Client.prototype.createSpace = function(name,callback) {
  return this.connection.post(`/namespaces/${name}`,null, callback);
};

//获取命名空间信息
Client.prototype.spaceInfo = function(name,callback) {
  return this.connection.get(`/namespaces/${name}`, callback);
};

//获取指定命名空间下的列表
Client.prototype.spaceTable= function(name,callback) {
  return this.connection.get(`/namespaces/${name}/tables`, callback);
};

//移除命名空间
Client.prototype.removeSpace= function(name,callback) {
  return this.connection.delete(`/namespaces/${name}`, callback);
};


// ## `client.table`

// Return a new instance of "hbase.Table".
Client.prototype.table = function(name) {
  return new Table(this, name);
};

module.exports = Client;
